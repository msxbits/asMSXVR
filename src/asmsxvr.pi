class asMSXVR implements DOS_Program
{
    constants:
        VERSION = "0.0.1-beta";
        DATE = "2022-10-22";

    properties:
        verbose = 1;
        zilog = 0;

	virtual Start()
    {
        _console = GetConsole();

        _fileArg = GetParam(GetNumParams() - 1);

        #if YYDEBUG == 1
            _yydebug = 1;
        #endif

        _console.Println("------------------------------------------------------");
        _console.Println(" asMSXVR v" + VERSION + " MSX cross-assembler [" + DATE + "]");
        _console.Println("------------------------------------------------------");
		_console.Println("");

        for (option = 0; option < GetNumParams() -1; option++) 
        {

            _param = String_Left(GetParam(option), 3);

            // Zilog compatibility MNEMO_DEC
            if (_param == "/z" )
            {
                zilog = 1;
            } 
            
            // Silent
            else if (_param == "/s")
            {
                verbose = 0;
            }

            // Very verbose
            else if (_param == "/vv")
            {
                verbose = 2;
            }

            #if YYDEBUG == 1
            // DEBUG
            else if (_param == "/d")
            {
                _yydebug = 1;
            }            
            #endif
            
            else if (String_Left(GetParam(option), 1) == "/")
            {
                _fileArg = 0;
            }
        }

        if (!_fileArg || _fileArg == 0) {
            #if YYDEBUG == 1
       		    _console.Println("Syntax: asMSX [/z|/s|/vv/d] [file.asm]");
            #else
       		    _console.Println("Syntax: asMSX [/z|/s|/vv] [file.asm]");
            #endif
        }

        _file = GetEngine().FileOpen(_fileArg, "FILE_MODE_READ");
        if (!_file) 
        {
            _console.Println("Fatal: cannot open " + _fileArg);
        } 
        else 
        {
    		_console.Println("Assembling source file "  + _fileArg);
        }

		End(0);
    }
}